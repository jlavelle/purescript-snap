// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["828621320"] = [{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/snap/v0.1.0/src/Snap/React/Snapper.purs","end":[48,20]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"url","moduleName":"Snap.React.Snapper","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper'"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,3],"name":".spago/aff/v5.1.2/src/Effect/Aff/Class.purs","end":[17,21]},"score":6,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"liftAff","moduleName":"Effect.Aff.Class","info":{"values":[{"typeClassArguments":[["m",null]],"typeClass":[["Effect","Aff","Class"],"MonadAff"],"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"m"}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/profunctor-extra/v0.1.0/src/Data/Profunctor/Monoidal.purs","end":[116,62]},"score":0,"packageInfo":{"values":["profunctor-extra"],"tag":"Package"},"name":"mono","moduleName":"Data.Profunctor.Monoidal","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Monoidal"],"Unital"],"constraintArgs":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[127,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[127,50]},"score":12,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"fromFoldable","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Construct a list from a foldable structure.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[121,52]},"score":12,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"toUnfoldable","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"f"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a list into any unfoldable structure.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/lists/v5.4.1/src/Data/List/NonEmpty.purs","end":[113,60]},"score":12,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"toUnfoldable","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"f"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[125,50]},"score":12,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"fromFoldable","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Construct a list from a foldable structure.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[119,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[119,52]},"score":12,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"toUnfoldable","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"f"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a list into any unfoldable structure.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy/NonEmpty.purs","end":[32,60]},"score":12,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"toUnfoldable","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"f"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Lens/Void.purs","end":[9,33]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"devoid","moduleName":"Data.Lens.Lens.Void","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"There is everything in `Void`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Lens/Unit.purs","end":[8,33]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"united","moduleName":"Data.Lens.Lens.Unit","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"There is a `Unit` in everything.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/catenable-lists/v5.0.1/src/Data/CatList.purs","end":[132,53]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"fromFoldable","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert any `Foldable` into a `CatList`.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[139,53]},"score":11,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"toUnfoldable","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"f"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert an `Array` into an `Unfoldable` structure.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[154,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[154,51]},"score":11,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"fromFoldable","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Prim"],"Array"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Foldable` structure into an `Array`.\n\n```purescript\nfromFoldable (Just 1) = [1]\nfromFoldable (Nothing) = []\n```\n\n"}],"tag":"SearchResult"}]