// This file was generated by purescript-docs-search.
window.DocsSearchIndex["25"] = [["ul",[{"values":[{"sourceSpan":{"start":[17737,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17741,9]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"ul","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_ul"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[658,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[658,56]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"ul","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[676,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[676,56]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"ul","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ul'",[{"values":[{"sourceSpan":{"start":[17747,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17750,35]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"ul'","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_ul"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[661,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[661,42]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"ul'","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[679,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[679,42]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"ul'","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ul_",[{"values":[{"sourceSpan":{"start":[17744,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17744,24]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"ul_","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snap",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/snap/mealy/src/Snap.purs","end":[36,15]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"snap","moduleName":"Snap","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Component","SYTC"],"Component"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Machine","Mealy"],"MealyT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snap'",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/snap/mealy/src/Snap.purs","end":[22,16]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"snap'","moduleName":"Snap","info":{"values":[{"type":{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["v",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Component","SYTC"],"Component"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Machine","Mealy"],"MealyT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"x"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snapper",[{"values":[{"sourceSpan":{"start":[48,1],"name":"./cattron/src/CatTron/State.purs","end":[48,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"snapper","moduleName":"Examples.CatTron.State","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper'"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Examples","CatTron","State"],"State"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":"./reducer/src/Reducer/State.purs","end":[50,80]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"snapper","moduleName":"Examples.Reducer.State","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Examples","Reducer","State"],"Action"]}]},{"tag":"TypeConstructor","contents":[["Examples","Reducer","State"],"State"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":"./routing/src/Routing/State.purs","end":[21,79]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"snapper","moduleName":"Examples.Routing.State","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper"]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeConstructor","contents":[["Examples","Routing","State","Types"],"Update"]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Examples","Routing","State","Types"],"State"]}]}}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":"./todomvc/src/TodoMVC/State.purs","end":[139,67]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"snapper","moduleName":"Examples.TodoMVC.State","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper'"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Examples","TodoMVC","State"],"App"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":"./transactionalform/src/TransactionalForm/State.purs","end":[21,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"snapper","moduleName":"Examples.TransactionalForm.State","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper'"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Examples","TransactionalForm","State"],"State"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/snap/mealy/src/Snap/Snapper.purs","end":[18,66]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"Snapper","moduleName":"Snap.Snapper","info":{"values":[{"typeArguments":[["m",null],["b",null],["u",null],["s",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"Snapper","moduleName":"Snap.Snapper","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["put",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"u"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"RCons","contents":["get",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"s"}]},{"tag":"REmpty","contents":{}}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["snapper'",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/snap/mealy/src/Snap/Snapper.purs","end":[21,39]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"Snapper'","moduleName":"Snap.Snapper","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["m",null],["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["snapper''",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/snap/mealy/src/Snap/Snapper.purs","end":[22,39]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"Snapper''","moduleName":"Snap.Snapper","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},"arguments":[["m",null],["b",null],["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["snd",[{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/tuples/v5.1.0/src/Data/Tuple.purs","end":[186,34]},"score":24,"packageInfo":{"values":["tuples"],"tag":"Package"},"name":"snd","moduleName":"Data.Tuple","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"b"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the second component of a tuple.\n"}],"tag":"SearchResult"}]],["snoc",[{"values":[{"sourceSpan":{"start":[201,1],"name":".spago/arrays/v5.3.1/src/Data/Array/NonEmpty.purs","end":[201,58]},"score":12,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"snoc","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[249,1],"name":".spago/arrays/v5.3.1/src/Data/Array.purs","end":[249,57]},"score":12,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"snoc","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of an array, creating a new array.\n\n```purescript\nsnoc [1, 2, 3] 4 = [1, 2, 3, 4]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/catenable-lists/v5.0.1/src/Data/CatList.purs","end":[91,46]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of the catenable list, creating a new\ncatenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/catenable-lists/v5.0.1/src/Data/CatQueue.purs","end":[75,48]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of the queue, creating a new queue.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[219,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[219,40]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of a list, creating a new list.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/lists/v5.4.1/src/Data/List/NonEmpty.purs","end":[136,56]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[203,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[203,40]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the end of a list, creating a new list.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/CodePoints.purs","end":[64,46]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"snoc","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/CodeUnits.purs","end":[85,41]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"snoc","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a string by appending a character.\n\n```purescript\nsnoc 'c' \"ab\" = NonEmptyString \"abc\"\nsnoc 'a' \"\" = NonEmptyString \"a\"\n```\n"}],"tag":"SearchResult"}]],["snoc'",[{"values":[{"sourceSpan":{"start":[204,1],"name":".spago/arrays/v5.3.1/src/Data/Array/NonEmpty.purs","end":[204,51]},"score":12,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"snoc'","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/lists/v5.4.1/src/Data/List/NonEmpty.purs","end":[139,51]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"snoc'","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["role",[{"values":[{"sourceSpan":{"start":[327,1],"name":".spago/react/v8.0.0/src/React/DOM/Props.purs","end":[327,24]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"role","moduleName":"React.DOM.Props","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["root",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Root","moduleName":"Examples.Routing.Router","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":"./routing/src/Routing/UI.purs","end":[41,36]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"root","moduleName":"Examples.Routing.UI","info":{"values":[{"type":{"tag":"ForAll","contents":["u",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Component","SYTC"],"Cmp"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"u"}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex.purs","end":[130,55]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"root","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Modifies a given codec to require a prefix of '/'.\nYou can think of it as stripping and adding the '/' at the beginning of path,\nfailing if it's not there.\n\n```purescript\nparse (root segment) \"/abc\" == Right \"abc\"\nparse (root segment) \"abc\" == Left (Expected \"\" \"abc\")\n\nprint (root segment) \"abc\" == \"/abc\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/routing/v9.0.1/src/Routing/Match.purs","end":[53,19]},"score":0,"packageInfo":{"values":["routing"],"tag":"Package"},"name":"root","moduleName":"Routing.Match","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Match"],"Match"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Matches a leading slash.\n"}],"tag":"SearchResult"}]],["round",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[61,23]},"score":8,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"round","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the nearest integer to the\nargument. Values outside the `Int` range are clamped, `NaN` and `Infinity`\nvalues return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[52,41]},"score":5,"packageInfo":{"values":["math"],"tag":"Package"},"name":"round","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the integer closest to the argument.\n"}],"tag":"SearchResult"}]],["route",[{"values":[{"sourceSpan":{"start":[23,1],"name":"./routing/src/Routing/State/Types.purs","end":[23,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Route","moduleName":"Examples.Routing.State.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Record","Choose"],"HasField"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Examples","Routing","State","Types"],"PageState"]},{"tag":"REmpty","contents":{}}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/routing/v9.0.1/src/Routing/Types.purs","end":[13,28]},"score":0,"packageInfo":{"values":["routing"],"tag":"Package"},"name":"Route","moduleName":"Routing.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Routing","Types"],"RoutePart"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/snap/mealy/src/Snap/React/Snapper.purs","end":[53,60]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"route","moduleName":"Snap.React.Snapper","info":{"values":[{"type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"o"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Snapper"],"Snapper"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteError"]}]},{"tag":"TypeVar","contents":"o"}]}}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["route'",[{"values":[{"sourceSpan":{"start":[17,1],"name":"./routing/src/Routing/Router.purs","end":[22,18]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Route'","moduleName":"Examples.Routing.Router","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeduplex",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex.purs","end":[57,71]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplex","moduleName":"Routing.Duplex","info":{"values":[{"typeArguments":[["i",null],["o",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The core abstraction of this library. The values of this type can be used both for parsing\nvalues of type `o` from `String` as well as printing values of type `i` into `String`.\n\nFor most purposes, you'll likely want `RouterDuplex'` which uses the same\ntype for both parameters.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplex","moduleName":"Routing.Duplex","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Printer"],"RoutePrinter"]}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex","Parser"],"RouteParser"]},{"tag":"TypeVar","contents":"o"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routeduplex'",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex.purs","end":[62,38]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplex'","moduleName":"Routing.Duplex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Routing","Duplex"],"RouteDuplex"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type restricted variant of `RouteDuplex` where input and output are\nthe same type. This type will typically be your custom `Route` data type\nrepresenting valid routes within your application.\n"}],"tag":"SearchResult"}]],["routeduplexbuildparams",[{"values":[{"sourceSpan":{"start":[356,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex.purs","end":[361,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplexBuildParams","moduleName":"Routing.Duplex","info":{"values":[{"superclasses":[],"fundeps":[[["rl"],["r1","r2","r3","r4"]]],"arguments":[["rl",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["r1",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["r2",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["r3",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["r4",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeduplexparams",[{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex.purs","end":[345,46]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteDuplexParams","moduleName":"Routing.Duplex","info":{"values":[{"superclasses":[],"fundeps":[[["r1"],["r2"]]],"arguments":[["r1",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["r2",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeerror",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex/Parser.purs","end":[61,14]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteError","moduleName":"Routing.Duplex.Parser","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeparams",[{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex/Types.purs","end":[5,47]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteParams","moduleName":"Routing.Duplex.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeparser",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex/Parser.purs","end":[70,34]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteParser","moduleName":"Routing.Duplex.Parser","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routepart",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/routing/v9.0.1/src/Routing/Types.purs","end":[8,57]},"score":0,"packageInfo":{"values":["routing"],"tag":"Package"},"name":"RoutePart","moduleName":"Routing.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routeprinter",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex/Printer.purs","end":[21,63]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RoutePrinter","moduleName":"Routing.Duplex.Printer","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RoutePrinter","moduleName":"Routing.Duplex.Printer","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}]},{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteState"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["routeresult",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex/Parser.purs","end":[50,25]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteResult","moduleName":"Routing.Duplex.Parser","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["routestate",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/routing-duplex/v0.4.1/src/Routing/Duplex/Types.purs","end":[11,4]},"score":0,"packageInfo":{"values":["routing-duplex"],"tag":"Package"},"name":"RouteState","moduleName":"Routing.Duplex.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["segments",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["params",{"tag":"TypeConstructor","contents":[["Routing","Duplex","Types"],"RouteParams"]},{"tag":"RCons","contents":["hash",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["rowapply",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Row.purs","end":[12,58]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowApply","moduleName":"Type.Row","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},"arguments":[["f",{"tag":"FunKind","contents":[{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}},{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]}],["a",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Type application for rows.\n"}],"tag":"SearchResult"}]],["rowindex",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLTableRowElement.purs","end":[57,61]},"score":2,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"rowIndex","moduleName":"Web.HTML.HTMLTableRowElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableRowElement"],"HTMLTableRowElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rowlist",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"RowList","moduleName":"Prim.RowList","info":{"values":[],"tag":"ExternKindResult"},"hashAnchor":"k","comments":"A type level list representation of a row of types.\n"}],"tag":"SearchResult"}]],["rowlistappend",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/RowList.purs","end":[85,37]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListAppend","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["out"]]],"arguments":[["lhs",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["rhs",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["out",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["rowlistnub",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/RowList.purs","end":[68,35]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListNub","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["input"],["output"]]],"arguments":[["input",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["output",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Remove label duplicates, keeps earlier occurrences.\n"}],"tag":"SearchResult"}]],["rowlistremove",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/RowList.purs","end":[37,44]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListRemove","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["label","input"],["output"]]],"arguments":[["label",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}],["input",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["output",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Remove all occurences of a given label from a RowList\n"}],"tag":"SearchResult"}]],["rowlistset",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/RowList.purs","end":[57,45]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"RowListSet","moduleName":"Type.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["label","typ","input"],["output"]]],"arguments":[["label",{"tag":"NamedKind","contents":[["Prim"],"Symbol"]}],["typ",{"tag":"NamedKind","contents":[["Prim"],"Type"]}],["input",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["output",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Add a label to a RowList after removing other occurences.\n"}],"tag":"SearchResult"}]],["rows",[{"values":[{"sourceSpan":{"start":[330,1],"name":".spago/react/v8.0.0/src/React/DOM/Props.purs","end":[330,21]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"rows","moduleName":"React.DOM.Props","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLTableElement.purs","end":[136,65]},"score":2,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"rows","moduleName":"Web.HTML.HTMLTableElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableElement"],"HTMLTableElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLTableSectionElement.purs","end":[58,72]},"score":2,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"rows","moduleName":"Web.HTML.HTMLTableSectionElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableSectionElement"],"HTMLTableSectionElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[168,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[168,57]},"score":2,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"rows","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rowspan",[{"values":[{"sourceSpan":{"start":[333,1],"name":".spago/react/v8.0.0/src/React/DOM/Props.purs","end":[333,24]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"rowSpan","moduleName":"React.DOM.Props","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/HTMLTableCellElement.purs","end":[59,61]},"score":2,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"rowSpan","moduleName":"Web.HTML.HTMLTableCellElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableCellElement"],"HTMLTableCellElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rowtolist",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"RowToList","moduleName":"Prim.RowList","info":{"values":[{"superclasses":[],"fundeps":[[["row"],["list"]]],"arguments":[["row",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],["list",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for generating a `RowList` from a closed row\nof types.  Entries are sorted by label and duplicates are preserved in\nthe order they appeared in the row.\n"}],"tag":"SearchResult"}]],["or",[{"values":[{"sourceSpan":{"start":[312,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Foldable.purs","end":[312,61]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"or","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The disjunction of all the values in a data structure. When specialized\nto `Boolean`, this function will test whether any of the values in a data\nstructure is `true`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/integers/v4.0.0/src/Data/Int/Bits.purs","end":[18,39]},"score":8,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"or","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise OR.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[270,1],"name":".spago/pipes/v6.0.0/src/Pipes/Prelude.purs","end":[270,64]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"or","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Determines whether any element is `True`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Data/Boolean.purs","end":[50,27]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Or","moduleName":"Type.Data.Boolean","info":{"values":[{"superclasses":[],"fundeps":[[["lhs","rhs"],["output"]]],"arguments":[["lhs",{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}],["rhs",{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}],["output",{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Or two `Boolean` types together\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/typelevel-prelude/v5.0.2/src/Type/Data/Boolean.purs","end":[54,65]},"score":4,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"or","moduleName":"Type.Data.Boolean","info":{"values":[{"type":{"tag":"ForAll","contents":["o",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["l",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Boolean"],"Or"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","Boolean"],"BProxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","Boolean"],"BProxy"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","Boolean"],"BProxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ord",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[38,32]},"score":63,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Ord","moduleName":"Data.Ord","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Ord` type class represents types which support comparisons with a\n_total order_.\n\n`Ord` instances should satisfy the laws of total orderings:\n\n- Reflexivity: `a <= a`\n- Antisymmetry: if `a <= b` and `b <= a` then `a = b`\n- Transitivity: if `a <= b` and `b <= c` then `a <= c`\n"}],"tag":"SearchResult"}]],["ord1",[{"values":[{"sourceSpan":{"start":[211,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[212,56]},"score":63,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Ord1","moduleName":"Data.Ord","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Eq"],"Eq1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Ord1` type class represents totally ordered type constructors.\n"}],"tag":"SearchResult"}]],["ordering",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/prelude/v4.1.1/src/Data/Ordering.purs","end":[13,29]},"score":63,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Ordering","moduleName":"Data.Ordering","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Ordering` data type represents the three possible outcomes of\ncomparing two values:\n\n`LT` - The first value is _less than_ the second.\n`GT` - The first value is _greater than_ the second.\n`EQ` - The first value is _equal to_ the second.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Ordering","moduleName":"Prim.Ordering","info":{"values":[],"tag":"ExternKindResult"},"hashAnchor":"k","comments":"The `Ordering` kind represents the three possibilites of comparing two\ntypes of the same kind: `LT` (less than), `EQ` (equal to), and\n`GT` (greater than).\n"}],"tag":"SearchResult"}]],["ordrecord",[{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/prelude/v4.1.1/src/Data/Ord.purs","end":[218,75]},"score":63,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"OrdRecord","moduleName":"Data.Ord","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Eq"],"EqRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"}]}],"fundeps":[],"arguments":[["rowlist",null],["row",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["origin",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Document.purs","end":[87,51]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"origin","moduleName":"Web.DOM.Document","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Location.purs","end":[44,51]},"score":2,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"origin","moduleName":"Web.HTML.Location","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Location"],"Location"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["orof",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Fold.purs","end":[77,76]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"orOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The disjunction of all foci of a `Fold`.\n"}],"tag":"SearchResult"}]],["lunit",[{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/profunctor-extra/v0.1.0/src/Control/Category/Tensor.purs","end":[32,37]},"score":0,"packageInfo":{"values":["profunctor-extra"],"tag":"Package"},"name":"lunit","moduleName":"Control.Category.Tensor","info":{"values":[{"typeClassArguments":[["t",null],["i",null],["p",null]],"typeClass":[["Control","Category","Tensor"],"Tensor"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Category","Tensor"],"Tensor"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Category","Tensor"],"Iso"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ix",[{"values":[{"sourceSpan":{"start":[50,3],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Index.purs","end":[50,28]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"ix","moduleName":"Data.Lens.Index","info":{"values":[{"typeClassArguments":[["m",null],["a",null],["b",null]],"typeClass":[["Data","Lens","Index"],"Index"],"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","Index"],"Index"],"constraintArgs":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,3],"name":".spago/foreign/v5.0.0/src/Foreign/Index.purs","end":[35,49]},"score":4,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"ix","moduleName":"Foreign.Index","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Foreign","Index"],"Indexable"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Index"],"Indexable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Foreign","Index"],"Index"],"constraintArgs":[{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign"],"F"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hydrate",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM.purs","end":[51,41]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"hydrate","moduleName":"React.Basic.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Render or update/re-render a component tree into\na DOM element, attempting to reuse the existing\nDOM tree.\n\n__*Note:* Relies on `ReactDOM.hydrate`, generally only\n  used with `ReactDOMServer.renderToNodeStream` or\n  `ReactDOMServer.renderToString`__\n"}],"tag":"SearchResult"}]],["hydrate'",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM.purs","end":[62,57]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"hydrate'","moduleName":"React.Basic.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Render or update/re-render a component tree into\na DOM element, attempting to reuse the existing\nDOM tree. The given Effect is run once the\nDOM update is complete.\n\n__*Note:* Relies on `ReactDOM.hydrate`, generally only\n  used with `ReactDOMServer.renderToNodeStream` or\n  `ReactDOMServer.renderToString`__\n"}],"tag":"SearchResult"}]]]