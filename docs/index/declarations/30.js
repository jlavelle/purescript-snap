// This file was generated by purescript-docs-search.
window.DocsSearchIndex["30"] = [["tr",[{"values":[{"sourceSpan":{"start":[17274,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17278,9]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"tr","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_tr"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[640,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[640,56]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"tr","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[658,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[658,56]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"tr","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["tr'",[{"values":[{"sourceSpan":{"start":[17284,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17287,35]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"tr'","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_tr"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[643,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[643,42]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"tr'","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[661,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[661,42]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"tr'","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["tr_",[{"values":[{"sourceSpan":{"start":[17281,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17281,24]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"tr_","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["trace",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["http-methods"],"tag":"Package"},"name":"TRACE","moduleName":"Data.HTTP.Method","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/debug/v4.0.0/src/Debug/Trace.purs","end":[23,74]},"score":0,"packageInfo":{"values":["debug"],"tag":"Package"},"name":"trace","moduleName":"Debug.Trace","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Log any PureScript value to the console for debugging purposes and then\nreturn a value. This will log the value's underlying representation for\nlow-level debugging, so it may be desireable to `show` the value first.\n\nThe return value is thunked so it is not evaluated until after the\nmessage has been printed, to preserve a predictable console output.\n\nFor example:\n``` purescript\ndoSomething = trace \"Hello\" \\_ -> ... some value or computation ...\n```\n"}],"tag":"SearchResult"}]],["traced",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Traced.purs","end":[21,35]},"score":9,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Traced","moduleName":"Control.Comonad.Traced","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["m",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Traced` comonad is a synonym for the `TracedT` comonad transformer, applied\nto the `Identity` monad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Traced.purs","end":[28,45]},"score":9,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"traced","moduleName":"Control.Comonad.Traced","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Comonad","Traced"],"Traced"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a value in context in the `Traced` comonad.\n"}],"tag":"SearchResult"}]],["tracedt",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Traced/Trans.purs","end":[18,45]},"score":9,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"TracedT","moduleName":"Control.Comonad.Traced.Trans","info":{"values":[{"typeArguments":[["t",null],["w",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The cowriter comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad so that the value\ndepends on a monoidal position of type `t`.\n\nThe `ComonadTraced` type class describes the operations supported by this comonad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":9,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"TracedT","moduleName":"Control.Comonad.Traced.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["tracem",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/debug/v4.0.0/src/Debug/Trace.purs","end":[27,61]},"score":0,"packageInfo":{"values":["debug"],"tag":"Package"},"name":"traceM","moduleName":"Debug.Trace","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Debug","Trace"],"DebugWarning"],"constraintArgs":[]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Log any PureScript value to the console and return the unit value of the\nMonad `m`.\n"}],"tag":"SearchResult"}]],["track",[{"values":[{"sourceSpan":{"start":[30,3],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Traced/Class.purs","end":[30,35]},"score":9,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"track","moduleName":"Control.Comonad.Traced.Class","info":{"values":[{"typeClassArguments":[["t",null],["w",null]],"typeClass":[["Control","Comonad","Traced","Class"],"ComonadTraced"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Traced","Class"],"ComonadTraced"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17431,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17435,9]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"track","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_track"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[646,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[646,37]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"track","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[664,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[664,37]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"track","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["track'",[{"values":[{"sourceSpan":{"start":[17438,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[17441,35]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"track'","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_track"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[649,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[649,23]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"track'","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[667,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[667,23]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"track'","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["trackevent",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/web-html/v2.3.0/src/Web/HTML/Event/TrackEvent.purs","end":[8,39]},"score":2,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"TrackEvent","moduleName":"Web.HTML.Event.TrackEvent","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["tracks",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Traced/Class.purs","end":[33,66]},"score":9,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"tracks","moduleName":"Control.Comonad.Traced.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Traced","Class"],"ComonadTraced"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extracts a value at a relative position which depends on the current value.\n"}],"tag":"SearchResult"}]],["trampoline",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/free/v5.2.0/src/Control/Monad/Trampoline.purs","end":[21,35]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Trampoline","moduleName":"Control.Monad.Trampoline","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Trampoline` monad\n\nA computation of type `Trampoline a` consists of zero or more lazy\nsuspensions before a value is returned.\n"}],"tag":"SearchResult"}]],["transacted",[{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/snap/mealy/src/Snap/React/Component.purs","end":[165,73]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"transacted","moduleName":"Snap.React.Component","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["vc",{"tag":"ForAll","contents":["vs",{"tag":"ForAll","contents":["vr",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["revert",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Component","SYTC"],"Component"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"vr"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeWildcard","contents":{}}]},{"tag":"RCons","contents":["save",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Component","SYTC"],"Component"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"vs"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeWildcard","contents":{}}]},{"tag":"RCons","contents":["change",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Component","SYTC"],"Cmp''"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"vc"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeWildcard","contents":{}}]}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Snap","Component","SYTC"],"Cmp''"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["revert",{"tag":"TypeVar","contents":"vr"},{"tag":"RCons","contents":["save",{"tag":"TypeVar","contents":"vs"},{"tag":"RCons","contents":["change",{"tag":"TypeVar","contents":"vc"},{"tag":"REmpty","contents":{}}]}]}]}]}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Optics"],"Transactional"]},{"tag":"TypeVar","contents":"s"}]}}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["transactional",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/snap/mealy/src/Data/Profunctor/Optics.purs","end":[47,63]},"score":0,"packageInfo":{"values":["snap"],"tag":"Package"},"name":"Transactional","moduleName":"Data.Profunctor.Optics","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"s"},{"tag":"RCons","contents":["modification",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Transactional","moduleName":"Examples.Routing.Router","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["transpose",[{"values":[{"sourceSpan":{"start":[728,1],"name":".spago/lists/v5.4.1/src/Data/List/Lazy.purs","end":[728,54]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"transpose","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The 'transpose' function transposes the rows and columns of its argument.\nFor example,\n\n    transpose ((1:2:3:nil) : (4:5:6:nil) : nil) ==\n      ((1:4:nil) : (2:5:nil) : (3:6:nil) : nil)\n\nIf some of the rows are shorter than the following rows, their elements are skipped:\n\n    transpose ((10:11:nil) : (20:nil) : nil : (30:31:32:nil) : nil) ==\n      ((10:20:30:nil) : (11:31:nil) : (32:nil) : nil)\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[752,1],"name":".spago/lists/v5.4.1/src/Data/List.purs","end":[752,54]},"score":13,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"transpose","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The 'transpose' function transposes the rows and columns of its argument.\nFor example,\n\n    transpose ((1:2:3:Nil) : (4:5:6:Nil) : Nil) ==\n      ((1:4:Nil) : (2:5:Nil) : (3:6:Nil) : Nil)\n\nIf some of the rows are shorter than the following rows, their elements are skipped:\n\n    transpose ((10:11:Nil) : (20:Nil) : Nil : (30:31:32:Nil) : Nil) ==\n      ((10:20:30:Nil) : (11:31:Nil) : (32:Nil) : Nil)\n"}],"tag":"SearchResult"}]],["traversable",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Traversable.purs","end":[52,62]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"Traversable","moduleName":"Data.Traversable","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]}],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Traversable` represents data structures which can be _traversed_,\naccumulating results and effects in some `Applicative` functor.\n\n- `traverse` runs an action for every element in a data structure,\n  and accumulates the results.\n- `sequence` runs the actions _contained_ in a data structure,\n  and accumulates the results.\n\nThe `traverse` and `sequence` functions should be compatible in the\nfollowing sense:\n\n- `traverse f xs = sequence (f <$> xs)`\n- `sequence = traverse identity`\n\n`Traversable` instances should also be compatible with the corresponding\n`Foldable` instances, in the following sense:\n\n- `foldMap f = runConst <<< traverse (Const <<< f)`\n\nDefault implementations are provided by the following functions:\n\n- `traverseDefault`\n- `sequenceDefault`\n"}],"tag":"SearchResult"}]],["traversable1",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Semigroup/Traversable.purs","end":[35,57]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"Traversable1","moduleName":"Data.Semigroup.Traversable","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]}],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Traversable1` represents data structures with a minimum of one element that can be _traversed_,\naccumulating results and effects in some `Applicative` functor.\n\n- `traverse1` runs an action for every element in a data structure,\n  and accumulates the results.\n- `sequence1` runs the actions _contained_ in a data structure,\n  and accumulates the results.\n\nThe `traverse1` and `sequence1` functions should be compatible in the\nfollowing sense:\n\n- `traverse1 f xs = sequence1 (f <$> xs)`\n- `sequence1 = traverse1 identity`\n\n`Traversable1` instances should also be compatible with the corresponding\n`Foldable1` instances, in the following sense:\n\n- `foldMap1 f = runConst <<< traverse1 (Const <<< f)`\n\nDefault implementations are provided by the following functions:\n\n- `traverse1Default`\n- `sequence1Default`\n"}],"tag":"SearchResult"}]],["traversablevfrl",[{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/variant/v6.0.1/src/Data/Functor/Variant.purs","end":[91,114]},"score":3,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"TraversableVFRL","moduleName":"Data.Functor.Variant","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor","Variant"],"FoldableVFRL"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"row"}]}],"fundeps":[[["rl"],["row"]]],"arguments":[["rl",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["traversablewithindex",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/TraversableWithIndex.purs","end":[47,88]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"TraversableWithIndex","moduleName":"Data.TraversableWithIndex","info":{"values":[{"superclasses":[{"constraintClass":[["Data","FunctorWithIndex"],"FunctorWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"t"}]},{"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"t"}]},{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]}],"fundeps":[[["t"],["i"]]],"arguments":[["i",null],["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `Traversable` with an additional index.  \nA `TraversableWithIndex` instance must be compatible with its\n`Traversable` instance\n```purescript\ntraverse f = traverseWithIndex (const f)\n```\nwith its `FoldableWithIndex` instance\n```\nfoldMapWithIndex f = unwrap <<< traverseWithIndex (\\i -> Const <<< f i)\n```\nand with its `FunctorWithIndex` instance\n```\nmapWithIndex f = unwrap <<< traverseWithIndex (\\i -> Identity <<< f i)\n```\n\nA default implementation is provided by `traverseWithIndexDefault`.\n"}],"tag":"SearchResult"}]],["traversal",[{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Types.purs","end":[90,63]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Traversal","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","Internal","Wander"],"Wander"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A traversal.\n"}],"tag":"SearchResult"}]],["traversal'",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Types.purs","end":[91,40]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Traversal'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["traverse",[{"values":[{"sourceSpan":{"start":[306,1],"name":".spago/newtype/v3.0.0/src/Data/Newtype.purs","end":[313,9]},"score":26,"packageInfo":{"values":["newtype"],"tag":"Package"},"name":"traverse","moduleName":"Data.Newtype","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to the function from the `Traversable` class, but operating within\na newtype instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,3],"name":".spago/foldable-traversable/v4.1.1/src/Data/Traversable.purs","end":[51,74]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverse","moduleName":"Data.Traversable","info":{"values":[{"typeClassArguments":[["t",null]],"typeClass":[["Data","Traversable"],"Traversable"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["traverse1",[{"values":[{"sourceSpan":{"start":[34,3],"name":".spago/foldable-traversable/v4.1.1/src/Data/Semigroup/Traversable.purs","end":[34,69]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverse1","moduleName":"Data.Semigroup.Traversable","info":{"values":[{"typeClassArguments":[["t",null]],"typeClass":[["Data","Semigroup","Traversable"],"Traversable1"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Traversable"],"Traversable1"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["traverse1_",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Semigroup/Foldable.purs","end":[68,84]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverse1_","moduleName":"Data.Semigroup.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse a data structure, performing some effects encoded by an\n`Apply` instance at each value, ignoring the final result.\n"}],"tag":"SearchResult"}]],["traverse1default",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Semigroup/Traversable.purs","end":[52,13]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverse1Default","moduleName":"Data.Semigroup.Traversable","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Traversable"],"Traversable1"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `traverse1` using `sequence1`.\n"}],"tag":"SearchResult"}]],["traverse_",[{"values":[{"sourceSpan":{"start":[191,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Foldable.purs","end":[197,12]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverse_","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse a data structure, performing some effects encoded by an\n`Applicative` functor at each value, ignoring the final result.\n\nFor example:\n\n```purescript\ntraverse_ print [1, 2, 3]\n```\n"}],"tag":"SearchResult"}]],["traversebywither",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/filterable/v3.0.2/src/Data/Witherable.purs","end":[88,31]},"score":0,"packageInfo":{"values":["filterable"],"tag":"Package"},"name":"traverseByWither","moduleName":"Data.Witherable","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Witherable"],"Witherable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `traverse` given a `Witherable`.\n"}],"tag":"SearchResult"}]],["traversed",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Traversal.purs","end":[52,70]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"traversed","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A `Traversal` for the elements of a `Traversable` functor.\n\n```purescript\nover traversed negate [1, 2, 3] == [-1,-2,-3]\nover traversed negate (Just 3) == Just -3\n```\n"}],"tag":"SearchResult"}]],["traversedefault",[{"values":[{"sourceSpan":{"start":[55,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Traversable.purs","end":[61,13]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverseDefault","moduleName":"Data.Traversable","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `traverse` using `sequence` and `map`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[172,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/TraversableWithIndex.purs","end":[176,34]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverseDefault","moduleName":"Data.TraversableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `traverse` in terms of `traverseWithIndex`\n"}],"tag":"SearchResult"}]],["traverseof",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Traversal.purs","end":[57,73]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"traverseOf","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Turn a pure profunctor `Traversal` into a `lens`-like `Traversal`.\n"}],"tag":"SearchResult"}]],["traverseof_",[{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/profunctor-lenses/v6.3.0/src/Data/Lens/Fold.purs","end":[139,12]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"traverseOf_","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeConstructor","contents":[["Prim"],"Function"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse the foci of a `Fold`, discarding the results.\n"}],"tag":"SearchResult"}]],["traversevfrl",[{"values":[{"sourceSpan":{"start":[91,3],"name":".spago/variant/v6.0.1/src/Data/Functor/Variant.purs","end":[91,114]},"score":3,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"traverseVFRL","moduleName":"Data.Functor.Variant","info":{"values":[{"typeClassArguments":[["rl",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]}],["row",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}}]],"typeClass":[["Data","Functor","Variant"],"TraversableVFRL"],"type":{"tag":"ForAll","contents":["rl",{"tag":"NamedKind","contents":[["Prim","RowList"],"RowList"]},{"tag":"ForAll","contents":["row",{"tag":"Row","contents":{"tag":"NamedKind","contents":[["Prim"],"Type"]}},{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor","Variant"],"TraversableVFRL"],"constraintArgs":[{"tag":"TypeVar","contents":"rl"},{"tag":"TypeVar","contents":"row"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Data","RowList"],"RLProxy"]},{"tag":"TypeVar","contents":"rl"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"row"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"row"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["traversewithindex",[{"values":[{"sourceSpan":{"start":[47,3],"name":".spago/foldable-traversable/v4.1.1/src/Data/TraversableWithIndex.purs","end":[47,88]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverseWithIndex","moduleName":"Data.TraversableWithIndex","info":{"values":[{"typeClassArguments":[["i",null],["t",null]],"typeClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"type":{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["traversewithindex_",[{"values":[{"sourceSpan":{"start":[184,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/FoldableWithIndex.purs","end":[190,12]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverseWithIndex_","moduleName":"Data.FoldableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse a data structure with access to the index, performing some\neffects encoded by an `Applicative` functor at each value, ignoring the\nfinal result.\n\nFor example:\n\n```purescript\n> traverseWithIndex_ (curry logShow) [\"a\", \"b\", \"c\"]\n(Tuple 0 \"a\")\n(Tuple 1 \"b\")\n(Tuple 2 \"c\")\n```\n"}],"tag":"SearchResult"}]],["traversewithindexdefault",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/TraversableWithIndex.purs","end":[56,13]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"traverseWithIndexDefault","moduleName":"Data.TraversableWithIndex","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["i",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintArgs":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `traverseWithIndex` using `sequence` and `mapWithIndex`.\n"}],"tag":"SearchResult"}]],["tree",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/spec/v4.0.1/src/Test/Spec/Tree.purs","end":[33,26]},"score":0,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Tree","moduleName":"Test.Spec.Tree","info":{"values":[{"typeArguments":[["c",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["trim",[{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/strings/v4.0.2/src/Data/String/Common.purs","end":[88,40]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"trim","moduleName":"Data.String.Common","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n\n```purescript\ntrim \"   Hello  \\n World\\n\\t    \" == \"Hello  \\n World\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[177,1],"name":".spago/strings/v4.0.2/src/Data/String/NonEmpty/Internal.purs","end":[177,47]},"score":8,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"trim","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\nIf the string is entirely made up of whitespace the result will be Nothing.\n\n```purescript\ntrim (NonEmptyString \"   Hello  \\n World\\n\\t    \") == Just (NonEmptyString \"Hello  \\n World\")\ntrim (NonEmptyString \"   \\n\") == Nothing\n```\n"}],"tag":"SearchResult"}]],["true",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"True","moduleName":"Prim.Boolean","info":{"values":[{"kind":{"tag":"NamedKind","contents":[["Prim","Boolean"],"Boolean"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The 'True' boolean type.\n"}],"tag":"SearchResult"}]],["trunc",[{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/math/v2.1.1/src/Math.purs","end":[65,41]},"score":5,"packageInfo":{"values":["math"],"tag":"Package"},"name":"trunc","moduleName":"Math","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Truncates the decimal portion of a number. Equivalent to `floor` if the\nnumber is positive, and `ceil` if the number is negative.\n"}],"tag":"SearchResult"}]],["try",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/transformers/v4.2.0/src/Control/Monad/Error/Class.purs","end":[66,20]},"score":9,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"try","moduleName":"Control.Monad.Error.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Error","Class"],"MonadError"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return `Right` if the given action succeeds, `Left` if it throws.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/exceptions/v4.0.0/src/Effect/Exception.purs","end":[100,53]},"score":7,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"try","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Runs an Eff and returns eventual Exceptions as a `Left` value. If the\ncomputation succeeds the result gets wrapped in a `Right`.\n\nFor example:\n\n```purescript\nmain :: forall eff. Effect Unit\nmain = do\n  result <- try (readTextFile UTF8 \"README.md\")\n  case result of\n    Right lines ->\n      Console.log (\"README: \\n\" <> lines )\n    Left error ->\n      Console.error (\"Couldn't open README.md. Error was: \" <> show error)\n```\n"}],"tag":"SearchResult"}]],["tryput",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/avar/v3.0.0/src/Effect/Aff/AVar.purs","end":[58,39]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"tryPut","moduleName":"Effect.Aff.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to synchronously fill an AVar. If the AVar is already filled,\nthis will do nothing. Returns true or false depending on if it succeeded.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/avar/v3.0.0/src/Effect/AVar.purs","end":[57,42]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"tryPut","moduleName":"Effect.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to synchronously fill an AVar. If the AVar is already filled,\nthis will do nothing. Returns true or false depending on if it succeeded.\n"}],"tag":"SearchResult"}]],["tryread",[{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/avar/v3.0.0/src/Effect/Aff/AVar.purs","end":[71,38]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"tryRead","moduleName":"Effect.Aff.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to synchronously read an AVar. If the AVar is empty, this will\nreturn `Nothing`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/avar/v3.0.0/src/Effect/AVar.purs","end":[80,41]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"tryRead","moduleName":"Effect.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to synchronously read an AVar. If the AVar is empty, this will\nreturn `Nothing`.\n"}],"tag":"SearchResult"}]],["trytake",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/avar/v3.0.0/src/Effect/Aff/AVar.purs","end":[45,38]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"tryTake","moduleName":"Effect.Aff.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to synchronously take an AVar value, leaving it empty. If the\nAVar is empty, this will return `Nothing`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/avar/v3.0.0/src/Effect/AVar.purs","end":[69,41]},"score":1,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"tryTake","moduleName":"Effect.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to synchronously take an AVar value, leaving it empty. If the\nAVar is empty, this will return `Nothing`.\n"}],"tag":"SearchResult"}]],["rt",[{"values":[{"sourceSpan":{"start":[13070,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[13074,9]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"rt","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_rt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[496,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[496,56]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"rt","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[514,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[514,56]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"rt","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","DOM","Props"],"Props"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rt'",[{"values":[{"sourceSpan":{"start":[13080,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[13083,35]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"rt'","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_rt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[499,1],"name":".spago/react/v8.0.0/src/React/DOM/Dynamic.purs","end":[499,42]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"rt'","moduleName":"React.DOM.Dynamic","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[517,1],"name":".spago/react/v8.0.0/src/React/DOM.purs","end":[517,42]},"score":0,"packageInfo":{"values":["react"],"tag":"Package"},"name":"rt'","moduleName":"React.DOM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}]},{"tag":"TypeConstructor","contents":[["React"],"ReactElement"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rt_",[{"values":[{"sourceSpan":{"start":[13077,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[13077,24]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"rt_","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rtc",[{"values":[{"sourceSpan":{"start":[13224,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[13228,9]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"rtc","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_rtc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rtc'",[{"values":[{"sourceSpan":{"start":[13234,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[13237,35]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"rtc'","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"ForAll","contents":["attrs_",{"tag":"ForAll","contents":["attrs",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"attrs"},{"tag":"TypeVar","contents":"attrs_"},{"tag":"TypeConstructor","contents":[["React","Basic","DOM","Generated"],"Props_rtc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["React","Basic"],"ReactComponent"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"attrs"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rtc_",[{"values":[{"sourceSpan":{"start":[13231,1],"name":".spago/react-basic-dom/v3.2.0/src/React/Basic/DOM/Generated.purs","end":[13231,25]},"score":0,"packageInfo":{"values":["react-basic-dom"],"tag":"Package"},"name":"rtc_","moduleName":"React.Basic.DOM.Generated","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}]},{"tag":"TypeConstructor","contents":[["React","Basic"],"JSX"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rtraverse",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/foldable-traversable/v4.1.1/src/Data/Bitraversable.purs","end":[74,15]},"score":28,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"rtraverse","moduleName":"Data.Bitraversable","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["query",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["routing"],"tag":"Package"},"name":"Query","moduleName":"Routing.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["queryposition",[{"values":[{"sourceSpan":null,"score":1,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"QueryPosition","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["queryselector",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/ParentNode.purs","end":[42,45]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"QuerySelector","moduleName":"Web.DOM.ParentNode","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"QuerySelector","moduleName":"Web.DOM.ParentNode","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/ParentNode.purs","end":[50,71]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"querySelector","moduleName":"Web.DOM.ParentNode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","ParentNode"],"QuerySelector"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Finds the first child that is an element that matches the selector(s), or\nNothing if no such element exists.\n"}],"tag":"SearchResult"}]],["queryselectorall",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/ParentNode.purs","end":[56,82]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"querySelectorAll","moduleName":"Web.DOM.ParentNode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","ParentNode"],"QuerySelector"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Finds all the child elements that matches the selector(s).\n"}],"tag":"SearchResult"}]],["quot",[{"values":[{"sourceSpan":{"start":[222,1],"name":".spago/integers/v4.0.0/src/Data/Int.purs","end":[222,41]},"score":8,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"quot","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `quot` function provides _truncating_ integer division (see the\ndocumentation for the `EuclideanRing` class). It is identical to `div` in\nthe `EuclideanRing Int` instance if the dividend is positive, but will be\nslightly different if the dividend is negative. For example:\n\n```purescript\ndiv 2 3 == 0\nquot 2 3 == 0\n\ndiv (-2) 3 == (-1)\nquot (-2) 3 == 0\n\ndiv 2 (-3) == 0\nquot 2 (-3) == 0\n```\n"}],"tag":"SearchResult"}]],["quote",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Quote","moduleName":"Prim.TypeError","info":{"values":[{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Type"]},{"tag":"NamedKind","contents":[["Prim","TypeError"],"Doc"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The Quote type constructor renders any concrete type as a Doc\nto be used in a custom type error.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n"}],"tag":"SearchResult"}]],["quotelabel",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"QuoteLabel","moduleName":"Prim.TypeError","info":{"values":[{"kind":{"tag":"FunKind","contents":[{"tag":"NamedKind","contents":[["Prim"],"Symbol"]},{"tag":"NamedKind","contents":[["Prim","TypeError"],"Doc"]}]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"The `QuoteLabel` type constructor will produce a `Doc` when given a `Symbol`. When the resulting `Doc` is rendered\nfor a `Warn` or `Fail` constraint, a syntactically valid label will be produced, escaping with quotes as needed.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n"}],"tag":"SearchResult"}]],["ownerdocument",[{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/web-dom/v4.1.0/src/Web/DOM/Node.purs","end":[76,49]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"ownerDocument","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document the node belongs to, unless the node is a document in which\ncase the value is Nothing.\n"}],"tag":"SearchResult"}]]]